package com.generator.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.generator.dao.Promotions;
import com.generator.dao.Brands;
import com.generator.dao.Companys;
import com.generator.dao.Categories;
import com.generator.dao.Locations;
import com.generator.dao.Users;
import com.generator.dao.UserByBrands;
import com.generator.dao.Person;
import com.generator.dao.UserByPromotions;
import com.generator.dao.MostUsefulPromotion;

import com.generator.dao.PromotionsDao;
import com.generator.dao.BrandsDao;
import com.generator.dao.CompanysDao;
import com.generator.dao.CategoriesDao;
import com.generator.dao.LocationsDao;
import com.generator.dao.UsersDao;
import com.generator.dao.UserByBrandsDao;
import com.generator.dao.PersonDao;
import com.generator.dao.UserByPromotionsDao;
import com.generator.dao.MostUsefulPromotionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig promotionsDaoConfig;
    private final DaoConfig brandsDaoConfig;
    private final DaoConfig companysDaoConfig;
    private final DaoConfig categoriesDaoConfig;
    private final DaoConfig locationsDaoConfig;
    private final DaoConfig usersDaoConfig;
    private final DaoConfig userByBrandsDaoConfig;
    private final DaoConfig personDaoConfig;
    private final DaoConfig userByPromotionsDaoConfig;
    private final DaoConfig mostUsefulPromotionDaoConfig;

    private final PromotionsDao promotionsDao;
    private final BrandsDao brandsDao;
    private final CompanysDao companysDao;
    private final CategoriesDao categoriesDao;
    private final LocationsDao locationsDao;
    private final UsersDao usersDao;
    private final UserByBrandsDao userByBrandsDao;
    private final PersonDao personDao;
    private final UserByPromotionsDao userByPromotionsDao;
    private final MostUsefulPromotionDao mostUsefulPromotionDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        promotionsDaoConfig = daoConfigMap.get(PromotionsDao.class).clone();
        promotionsDaoConfig.initIdentityScope(type);

        brandsDaoConfig = daoConfigMap.get(BrandsDao.class).clone();
        brandsDaoConfig.initIdentityScope(type);

        companysDaoConfig = daoConfigMap.get(CompanysDao.class).clone();
        companysDaoConfig.initIdentityScope(type);

        categoriesDaoConfig = daoConfigMap.get(CategoriesDao.class).clone();
        categoriesDaoConfig.initIdentityScope(type);

        locationsDaoConfig = daoConfigMap.get(LocationsDao.class).clone();
        locationsDaoConfig.initIdentityScope(type);

        usersDaoConfig = daoConfigMap.get(UsersDao.class).clone();
        usersDaoConfig.initIdentityScope(type);

        userByBrandsDaoConfig = daoConfigMap.get(UserByBrandsDao.class).clone();
        userByBrandsDaoConfig.initIdentityScope(type);

        personDaoConfig = daoConfigMap.get(PersonDao.class).clone();
        personDaoConfig.initIdentityScope(type);

        userByPromotionsDaoConfig = daoConfigMap.get(UserByPromotionsDao.class).clone();
        userByPromotionsDaoConfig.initIdentityScope(type);

        mostUsefulPromotionDaoConfig = daoConfigMap.get(MostUsefulPromotionDao.class).clone();
        mostUsefulPromotionDaoConfig.initIdentityScope(type);

        promotionsDao = new PromotionsDao(promotionsDaoConfig, this);
        brandsDao = new BrandsDao(brandsDaoConfig, this);
        companysDao = new CompanysDao(companysDaoConfig, this);
        categoriesDao = new CategoriesDao(categoriesDaoConfig, this);
        locationsDao = new LocationsDao(locationsDaoConfig, this);
        usersDao = new UsersDao(usersDaoConfig, this);
        userByBrandsDao = new UserByBrandsDao(userByBrandsDaoConfig, this);
        personDao = new PersonDao(personDaoConfig, this);
        userByPromotionsDao = new UserByPromotionsDao(userByPromotionsDaoConfig, this);
        mostUsefulPromotionDao = new MostUsefulPromotionDao(mostUsefulPromotionDaoConfig, this);

        registerDao(Promotions.class, promotionsDao);
        registerDao(Brands.class, brandsDao);
        registerDao(Companys.class, companysDao);
        registerDao(Categories.class, categoriesDao);
        registerDao(Locations.class, locationsDao);
        registerDao(Users.class, usersDao);
        registerDao(UserByBrands.class, userByBrandsDao);
        registerDao(Person.class, personDao);
        registerDao(UserByPromotions.class, userByPromotionsDao);
        registerDao(MostUsefulPromotion.class, mostUsefulPromotionDao);
    }
    
    public void clear() {
        promotionsDaoConfig.getIdentityScope().clear();
        brandsDaoConfig.getIdentityScope().clear();
        companysDaoConfig.getIdentityScope().clear();
        categoriesDaoConfig.getIdentityScope().clear();
        locationsDaoConfig.getIdentityScope().clear();
        usersDaoConfig.getIdentityScope().clear();
        userByBrandsDaoConfig.getIdentityScope().clear();
        personDaoConfig.getIdentityScope().clear();
        userByPromotionsDaoConfig.getIdentityScope().clear();
        mostUsefulPromotionDaoConfig.getIdentityScope().clear();
    }

    public PromotionsDao getPromotionsDao() {
        return promotionsDao;
    }

    public BrandsDao getBrandsDao() {
        return brandsDao;
    }

    public CompanysDao getCompanysDao() {
        return companysDao;
    }

    public CategoriesDao getCategoriesDao() {
        return categoriesDao;
    }

    public LocationsDao getLocationsDao() {
        return locationsDao;
    }

    public UsersDao getUsersDao() {
        return usersDao;
    }

    public UserByBrandsDao getUserByBrandsDao() {
        return userByBrandsDao;
    }

    public PersonDao getPersonDao() {
        return personDao;
    }

    public UserByPromotionsDao getUserByPromotionsDao() {
        return userByPromotionsDao;
    }

    public MostUsefulPromotionDao getMostUsefulPromotionDao() {
        return mostUsefulPromotionDao;
    }

}
